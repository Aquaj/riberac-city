- classes = { (0..50) => :A,
    (51..90) => :B,
    (91..150) => :C,
    (151..230) => :D,
    (231..330) => :E,
    (331..450) => :F,
    (450..600) => :G }
- current_class = classes.select { |range, _| range.include? dpe }
- previous_classes = classes.count { |range, _| range.last < dpe }
- previous_classes = [previous_classes, classes.length - 1].min
- current_class = classes.to_a.last if current_class.empty?
- current_range, _current_name = current_class.to_a

.graph-container
  .graph
    - classes.each do |dpe_class|
      - class_range, class_name = dpe_class
      - classes = ["class-#{class_name.downcase} dpe-#{class_name.downcase}"]
      - classes << 'current' if class_range.include?(dpe)
      %div{class: classes}
        :ruby
          beginning = case [class_range.first, 450].min
                      when 0   then '&leq; '
                      when 450 then '&gt; '
                      else "#{class_range.first} Ã  "
                      end
          finish = [class_range.last, 450].min
        = "#{beginning} #{finish}".html_safe
        %span= class_name
  .cursor-bar
    - previous_classes.times do
      %div.empty
    .cursor
      %span= dpe
